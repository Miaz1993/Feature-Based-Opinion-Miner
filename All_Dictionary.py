import pandas as pd

nouns = {
 'bonus',
 'bounty',
 'budget',
 'buiness',
 'busines',
 'career',
 'caree',
 'careeer',
 'careers',
 'careerwise',
 'carreer',
 'carrer',
 'chage',
 'chance',
 'change',
 'changed',
 'changing',
 'chnage',
 'client',
 'coach',
 'colaboration',
 'collaborate',
 'collaborated',
 'collaborating',
 'collaboration',
 'collaborative',
 'collaboratory',
 'commanding',
 'commmunication',
 'communcation',
 'communicate',
 'communicated',
 'communicates',
 'communicating',
 'communication',
 'communicational',
 'communications',
 'communicative',
 'compensation',
 'comsumer',
 'comunication',
 'connect',
 'consumer',
 'converse',
 'conversing',
 'convey',
 'conveying',
 'cooperation',
 'corporate',
 'cost',
 'costing',
 'creation',
 'creativity',
 'culture',
 'customer',
  'decided',
  'decision',
  'decison',
  'decsions',
  'decission',
  'decsion',
  'desicion',
 'develoment',
 'developement',
 'developing',
 'development',
 'develpment',
 'deveopment',
 'devleopment',
 'devlopment',
 'distributers',
 'distribution',
 'distributor',
  'distributiorships',
 'diveristy',
 'diverse',
 'diversity',
 'effciency',
 'effeciency',
 'effectiveness',
 'efficency',
 'efficiencies',
 'efficiency',
 'efficient',
 'efficieny',
 'effiency',
 'environment',
 'establishment',
 'expense',
  'focuse',
  'focused',
  'focusing',
  'focuss',
  'focussed',
  'focusses',
  'focussing',
 'fuction',
 'function',
 'functionality',
 'functioned',
 'functioning',
 'funtion',
 'goal',
 'goups',
 'group',
 'groupings',
 'highperformance',
 'highquality',
 'implementation',
 'info',
 'infomation',
 'infomration',
 'inforamtion',
 'informaion',
 'informaiton',
 'informatiion',
 'informatin',
 'informatio',
 'information',
 'informations',
 'informaton',
 'informtion',
 'infos',
 'innovate',
 'innovating',
 'innovation',
 'innovational',
 'innovations',
 'innovative',
 'innovativeness',
 'innovators',
 'innovatory',
 'intercommunication',
 'interact',
 'interacting',
 'intercommunicate',
 'intercommunication',
 'inventiveness',
 'involvement',
 'leade',
 'leaded',
 'leader',
 'leaderhip',
 'leadership',
 'leadin',
 'leadless',
 'leads',
  'led',
 'manufacturers',
 'marketers',
 'mbo',
 'mbos',
 'megaproject',
 'multicultural',
 'newproducts',
 'nonpay',
 'nonperformance',
 'objective',
 'oportunity',
 'opportunies',
 'opportunites',
 'opportunities',
 'opportunitites',
 'opporunity',
 'oppotunity',
 'oppourtunity',
 'oppportunity',
 'opprtunity',
 'oppurtunity',
 'organisation',
 'organisations',
 'organistions',
 'organizaion',
 'organization',
 'organizationalstructure',
 'organizations',
  'organized',
 'organizaton',
 'organiztion',
 'organzation',
 'organziation',
 'paid',
 'partnering',
 'partnership',
 'pay',
 'payed',
 'paying',
 'payment',
 'payments',
 'payoff',
 'payout',
 'payroll',
 'pays',
 'payscale',
 'peformance',
 'perfomance',
 'perfomances',
 'performace',
 'performances',
 'perfromance',
 'perk',
 'perseverance',
  'pioneer',
  'pivotal',
  'planning'
 'players',
  'position'
 'preformance',
  'premier',
 'president',
  'price',
 'proccess',
  'procedure',
 'proces',
 'processes',
 'processess',
 'processs',
 'producers',
 'product',
 'productivity',
 'products',
  'professional',
 'professionalism',
  'progress',
 'project',
 'projects',
 'promoted',
 'promoting',
 'promotion',
  'promotional',
 'promotions',
 'promtion',
  'quality',
  'quaility',
  'qualiy',
  'quallity',
  'quanity',
  'quantity',
 'recommendation',
 'redistributors',
 'refocus',
 'reimburse',
  'relaying',
  'reliability',
 'remuneration',
 'repay',
 'repromotion',
 'resouce',
 'resouces',
 'resource',
 'resources',
 'resourse',
 'responsibilities',
 'retail',
 'retailers',
 'retraining',
 'revitalization',
 'reward',
 'rewarded',
 'rewarder',
 'rewarding',
 'rewards',
 'richness',
  'roadblock',
  'role',
 'role.',
 'roled',
 'rolemodel',
 'roles',
 'salarial',
 'salaried',
 'salaries',
 'salary',
 'savings',
 'selfpromotion',
 'sellers',
 'speak',
 'subfunction',
 'subgoal',
 'subgoals',
 'subgroups',
 'subteam',
 'superteam',
  'supplier',
 'suppliers',
 'support',
 'synergy',
  'system',
 'system',
 'talent',
 'target',
 'targeted',
 'targeter',
 'targeters',
 'targeting',
 'targetted',
 'targetting',
 'team',
 'teamate',
 'teambuilding',
 'teamer',
 'teammates',
 'teams',
 'teamwork',
 'teamworking',
 'timeline',
 'traget',
 'trailed',
 'trained',
 'trainees',
 'trainers',
 'traing',
 'trainings',
 'training',
 'trainning',
 'traning',
 'transition',
 'transmit',
 'transmitting',
 'unselfishness',
 'variety',
 'wage',
 'wages',
 'wholesalers',
 'expertise',
  'organized',
  'roadblock',
  'leading',
  'led',
  'decision',
  'decided',
  'position',
  'coach',
  'premier',
  'roadblock',
  'organized',
  'organizational',
  'promotional',
  'progress',
  'professional',
  'quantity',
  'objective',
  'objectives',
  'merit'}
 
negative_word = {'not',"cant","wont","shouldnt",'dont','couldnt','didnt',
                 'doesnt','no','isnt','without'}

#grams = {'supply chain','work life balance',
#         'new hire','cost living','new product',
#         'executive leadership team',
#         'senior leadership','sale team',
#         'high turnover','top talent',
#         'across function',
#         'new item','business unit','new employee'}


#sentiment dictionary
def get_sentiment_dict(file_name):
# Read sentiment dictionary & preprocessing 
  adj_sentiment_1 = pd.read_csv(file_name)
  adj_sentiment_1 = adj_sentiment_1.groupby(['SynsetTerms']).mean().reset_index()
  adj_sentiment_1= adj_sentiment_1[['SynsetTerms','NegScore','PosScore']]
  adj_sentiment_1['Score'] = adj_sentiment_1['PosScore'] - adj_sentiment_1['NegScore']

  sentiment_dict={}
  for index, row in adj_sentiment_1.iterrows():
      sentiment_dict[row[0]] = row[3] 
  return sentiment_dict

